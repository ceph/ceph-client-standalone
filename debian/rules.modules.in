#!/usr/bin/make -f

PACKAGE=ceph-modules
### KERNEL SETUP
### Setup the stuff needed for making kernel module packages
### taken from /usr/share/kernel-package/sample.module.rules

# prefix of the target package name
# PACKAGE=pvfs-modules
# modifieable for experiments or debugging m-a
MA_DIR ?= /usr/share/modass
# load generic variable handling
-include $(MA_DIR)/include/generic.make
# load default rules, including kdist, kdist_image, ...
-include $(MA_DIR)/include/common-rules.make

# module assistant calculates all needed things for us and sets
# following variables:
# KSRC (kernel source directory), KVERS (kernel version string), KDREV
# (revision of the Debian kernel-image package), CC (the correct
# compiler), VERSION (the final package version string), PKGNAME (full
# package name with KVERS included), DEB_DESTDIR (path to store DEBs)

# The kdist_configure target is called by make-kpkg modules_config and
# by kdist* rules by dependency. It should configure the module so it is
# ready for compilation (mostly useful for calling configure).
# prep-deb-files from module-assistant creates the neccessary debian/ files 
kdist_configure: prep-deb-files

# the kdist_clean target is called by make-kpkg modules_clean and from
# kdist* rules. It is responsible for cleaning up any changes that have
# been made by the other kdist_commands (except for the .deb files created)
kdist_clean:
	@$(MAKE) $(MFLAGS) KERNELDIR=$(KSRC) clean

### end  KERNEL SETUP

# the binary-modules rule is invoked by module-assistant while processing the
# kdist* targets. It is called by module-assistant or make-kpkg and *not*
# during a normal build

binary-modules: prep-deb-files
	dh_testroot
	dh_clean -k
	$(MAKE) KERNELDIR=$(KSRC) all
	mkdir -p ./debian/$(PACKAGE)-$(KVERS)/lib/modules/$(KVERS)/kernel/fs/ceph
	cp ceph.ko ./debian/$(PACKAGE)-$(KVERS)/lib/modules/$(KVERS)/kernel/fs/ceph/
	dh_installdocs
	dh_installchangelogs
	dh_compress
	dh_fixperms
	dh_strip
	dh_installmodules
	dh_install
	dh_installdeb
	dh_gencontrol -- -v$(VERSION)
	dh_md5sums
	dh_builddeb --destdir=$(DEB_DESTDIR)
	dh_clean -k

